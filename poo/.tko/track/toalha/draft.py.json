{
    "patches": [
        {
            "label": "2025-09-16_15-14-55",
            "content": "@@ -98,16 +98,17 @@\n  = color\n+;\n %0A       \n@@ -133,1394 +133,127 @@\n size\n-%0A        self.wetness: int = 0 %0A    %0A    def show(self) -%3E None:%0A        print(self); \n+;\n %0A    \n-%0A\n     \n-def __str__(self) -%3E str:%0A        return f%22Cor: %7Bself.color%7D, Tam: %7Bself.size%7D, Umidade: %7Bself.wetness%7D%22%0A    %0A    def getMaxWetness(self) -%3E int:%0A        if self.size == %22P%22:%0A            return 10;%0A        if self.size == %22M%22:%0A            return 20%0A        if self.size == %22G%22:%0A            return 30;%0A        return 0%0A    %0A    def dry(self, amount: int) -%3E None: %0A        self.wetness += amount;%0A        if self.wetness %3E self.getMaxWetness():%0A            print(%22toalha enchardada%22)%0A        self.wetness = self.getMaxWetness()%0A%0A    def wringOut(self) -%3E None:%0A        self.wetnesss = 0%0A    %0A    def isDry(self) -%3E bool:%0A        return self.wetness == 0;%0A%0A%0A%0Adef main():%0A    toalha = Towel(%22\n+self.wetness: int = 0;%0A%0A%0Arosa = Towel(%22rosa\n %22, %22\n+M\n %22, 0)\n+;\n %0A%0A\n-    while True:%0A        print(%22$%22, end=%22%22)%0A        line: str = input()%0A        args: list%5Bstr%5D = line.split(%22 %22)%0A%0A        if args%5B0%5D == %22end%22:%0A            break;%0A        elif args%5B0%5D == %22new%22:%0A            color = args%5B1%5D%0A            size = args%5B2%5D%0A            toalha = Towel(color, size, 0)%0A        elif args%5B0%5D == %22show%22:%0A            print(toalha)%0A        elif args%5B0%5D == %22dry%22:%0A            amount = int(args%5B1%5D)%0A            toalha.dry(amount);%0A        elif args%5B0%5D == %22wringout%22:%0A            return toalha.wetness == 0%0A        else:%0A            print(%22fail: comando desconhecido%22)%0A%0A%0A%0A%0A%0Amain()\n+print(rosa.color);%0Aprint(rosa.size);%0Aprint(rosa.wetness);\n",
            "lines": "12"
        },
        {
            "label": "2025-09-22_14-57-37",
            "content": "@@ -881,8 +881,645 @@\n = 0;%0A%0A%0A%0A\n+def main():%0A    toalha = Towel(%22%22, %22%22, 0)%0A%0A    while True:%0A        print(%22$%22, end=%22%22)%0A        line: str = input()%0A        args: list%5Bstr%5D = line.split(%22 %22)%0A%0A        if args%5B0%5D == %22end%22:%0A            break;%0A        elif args%5B0%5D == %22new%22:%0A            color = args%5B1%5D%0A            size = args%5B2%5D%0A            toalha = Towel(color, size, 0)%0A        elif args%5B0%5D == %22show%22:%0A            print(toalha)%0A        elif args%5B0%5D == %22dry%22:%0A            amount = int(args%5B1%5D)%0A            toalha.dry(amount);%0A        elif args%5B0%5D == %22wringout%22:%0A            return toalha.wetness == 0%0A        else:%0A            print(%22fail: comando desconhecido%22)%0A%0A%0A%0A%0A%0Amain()\n",
            "lines": "64"
        },
        {
            "label": "2025-09-22_15-11-16",
            "content": "@@ -885,638 +885,4 @@\n %0A%0A%0A%0A\n-def main():%0A    toalha = Towel(%22%22, %22%22, 0)%0A%0A    while True:%0A        print(%22$%22, end=%22%22)%0A        line: str = input()%0A        args: list%5Bstr%5D = line.split(%22 %22)%0A%0A        if args%5B0%5D == %22end%22:%0A            break;%0A        elif args%5B0%5D == %22new%22:%0A            color = args%5B1%5D%0A            size = args%5B2%5D%0A            toalha = Towel(color, size, 0)%0A        elif args%5B0%5D == %22show%22:%0A            print(toalha)%0A        elif args%5B0%5D == %22dry%22:%0A            amount = int(args%5B1%5D)%0A            toalha.dry(amount);%0A        elif args%5B0%5D == %22wringout%22:%0A            return toalha.wetness == 0%0A        else:%0A            print(%22fail: comando desconhecido%22)%0A%0A%0Amain()\n",
            "lines": "35"
        },
        {
            "label": "2025-09-22_15-11-46",
            "content": "class Towel:\n    def __init__(self, color: str, size: str, wetness: int):\n        self.color: str = color\n        self.size: str = size\n        self.wetness: int = 0 \n    \n    def show(self) -> None:\n        print(self); \n    \n    def __str__(self) -> str:\n        return f\"Cor: {self.color}, Tam: {self.size}, Umidade: {self.wetness}\"\n    \n    def getMaxWetness(self) -> int:\n        if self.size == \"P\":\n            return 10;\n        if self.size == \"M\":\n            return 20\n        if self.size == \"G\":\n            return 30;\n        return 0\n    \n    def dry(self, amount: int) -> None: \n        self.wetness += amount;\n        if self.wetness > self.getMaxWetness():\n            print(\"toalha enchardada\")\n        self.wetness = self.getMaxWetness()\n\n    def wringOut(self) -> None:\n        self.wetnesss = 0\n    \n    def isDry(self) -> bool:\n        return self.wetness == 0;\n\n\n\ndef main():\n    toalha = Towel(\"\", \"\", 0)\n\n    while True:\n        print(\"$\", end=\"\")\n        line: str = input()\n        args: list[str] = line.split(\" \")\n\n        if args[0] == \"end\":\n            break;\n        elif args[0] == \"new\":\n            color = args[1]\n            size = args[2]\n            toalha = Towel(color, size, 0)\n        elif args[0] == \"show\":\n            print(toalha)\n        elif args[0] == \"dry\":\n            amount = int(args[1])\n            toalha.dry(amount);\n        elif args[0] == \"wringout\":\n            return toalha.wetness == 0\n        else:\n            print(\"fail: comando desconhecido\")\n\n\nmain()",
            "lines": "61"
        }
    ]
}